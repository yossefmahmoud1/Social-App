export { J as AnyDataTag, b1 as CancelOptions, C as CancelledError, K as DataTag, A as DefaultError, b0 as DefaultOptions, af as DefaultedInfiniteQueryObserverOptions, ad as DefaultedQueryObserverOptions, aK as DefinedInfiniteQueryObserverResult, aB as DefinedQueryObserverResult, D as DehydrateOptions, x as DehydratedState, y as DistributiveOmit, W as Enabled, ai as EnsureInfiniteQueryDataOptions, ah as EnsureQueryDataOptions, aj as FetchInfiniteQueryOptions, aq as FetchNextPageOptions, ar as FetchPreviousPageOptions, ag as FetchQueryOptions, at as FetchStatus, a2 as GetNextPageParamFunction, a1 as GetPreviousPageParamFunction, H as HydrateOptions, L as InferDataFromTag, P as InferErrorFromTag, a3 as InfiniteData, aD as InfiniteQueryObserverBaseResult, aG as InfiniteQueryObserverLoadingErrorResult, aF as InfiniteQueryObserverLoadingResult, ae as InfiniteQueryObserverOptions, aE as InfiniteQueryObserverPendingResult, aJ as InfiniteQueryObserverPlaceholderResult, aH as InfiniteQueryObserverRefetchErrorResult, aL as InfiniteQueryObserverResult, aI as InfiniteQueryObserverSuccessResult, a9 as InfiniteQueryPageParamsOptions, Z as InitialDataFunction, a8 as InitialPageParam, ao as InvalidateOptions, am as InvalidateQueryFilters, aU as MutateFunction, aT as MutateOptions, w as Mutation, M as MutationCache, d as MutationCacheNotifyEvent, g as MutationFilters, aQ as MutationFunction, aM as MutationKey, aP as MutationMeta, e as MutationObserver, aV as MutationObserverBaseResult, aY as MutationObserverErrorResult, aW as MutationObserverIdleResult, aX as MutationObserverLoadingResult, aS as MutationObserverOptions, a_ as MutationObserverResult, aZ as MutationObserverSuccessResult, aR as MutationOptions, aO as MutationScope, v as MutationState, aN as MutationStatus, a5 as NetworkMode, N as NoInfer, b4 as NotifyEvent, b3 as NotifyEventType, a6 as NotifyOnChangeProps, O as OmitKeyof, z as Override, _ as PlaceholderDataFunction, $ as QueriesPlaceholderDataFunction, u as Query, Q as QueryCache, a as QueryCacheNotifyEvent, b as QueryClient, a$ as QueryClientConfig, j as QueryFilters, T as QueryFunction, Y as QueryFunctionContext, B as QueryKey, a0 as QueryKeyHashFunction, a4 as QueryMeta, c as QueryObserver, au as QueryObserverBaseResult, ax as QueryObserverLoadingErrorResult, aw as QueryObserverLoadingResult, ab as QueryObserverOptions, av as QueryObserverPendingResult, aA as QueryObserverPlaceholderResult, ay as QueryObserverRefetchErrorResult, aC as QueryObserverResult, az as QueryObserverSuccessResult, a7 as QueryOptions, X as QueryPersister, t as QueryState, as as QueryStatus, al as RefetchOptions, an as RefetchQueryFilters, R as Register, ap as ResetOptions, ak as ResultOptions, b2 as SetDataOptions, S as SkipToken, V as StaleTime, aa as ThrowOnError, I as UnsetMarker, U as Updater, ac as WithRequired, F as dataTagErrorSymbol, E as dataTagSymbol, q as defaultShouldDehydrateMutation, p as defaultShouldDehydrateQuery, n as dehydrate, h as hashKey, o as hydrate, l as isCancelledError, i as isServer, k as keepPreviousData, f as matchMutation, m as matchQuery, r as replaceEqualDeep, s as skipToken, G as unsetMarker } from './hydration-ZCurbX1S.js';
export { QueriesObserver, QueriesObserverOptions } from './queriesObserver.js';
export { InfiniteQueryObserver } from './infiniteQueryObserver.js';
export { defaultScheduler, notifyManager } from './notifyManager.js';
export { focusManager } from './focusManager.js';
export { onlineManager } from './onlineManager.js';
export { streamedQuery as experimental_streamedQuery } from './streamedQuery.js';
import './removable.js';
import './subscribable.js';
